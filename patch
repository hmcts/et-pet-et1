diff --git app/assets/stylesheets/_shame.scss app/assets/stylesheets/_shame.scss
index d1d375f..9656c5f 100644
--- app/assets/stylesheets/_shame.scss
+++ app/assets/stylesheets/_shame.scss
@@ -27,8 +27,7 @@ legend {
   width:100%;
   display:block;
   padding:0 0 $gutter-half/2 0;
-  &.medium {
-    @include core-24;
+  &.font-medium {
     border:none;
   }
   &.form-label{
@@ -58,6 +57,52 @@ aside {
   }
 }
 
-.form-panel{
+.form-panel {
   margin:0 0 $gutter;
+  legend.font-medium {
+    margin:0;
+  }
+}
+.slim-label {
+  display:inline-block;
+  padding-top:$gutter-half/2;
+  margin-right:$gutter-half;
+}
+.inline-fields {
+  overflow:hidden;
+  .form-group {
+    @include span(6 of 12);
+    clear:none;
+    margin-bottom:0;
+    &:first-child {
+      @include first;
+      padding-left:0;
+      input {
+        @include span(10 of 12);
+        margin-left:0;
+      }
+    }
+    &.radio_buttons {
+      @include last;
+      span.block-label {
+        margin-top:0;
+        margin-bottom:0;
+      }
+    }
+  }
 }
+
+
+.reference {
+  @include core-24;
+  @include span(8 of 12);
+  font-family: "Courier New", Courier, "Lucida Sans Typewriter", "Lucida Typewriter", monospace;
+  margin:$gutter-half 0;
+  background:$highlight-colour;
+  padding:4px 8px;
+  // text-align:center;
+  &.panel-indent {
+   margin-top:0;
+   margin-bottom:$gutter;
+  }
+}
\ No newline at end of file
diff --git app/assets/stylesheets/elements/_forms.scss app/assets/stylesheets/elements/_forms.scss
index e7822a1..2b3448a 100644
--- app/assets/stylesheets/elements/_forms.scss
+++ app/assets/stylesheets/elements/_forms.scss
@@ -80,9 +80,6 @@
   background-color: $white;
   border: 1px solid $border-colour;
   border-radius: 0;
-  &.select{
-      // @include col(2/3);
-  }
 }
 
 .form-control:not([type=radio][type=checkbox]) {
diff --git app/assets/stylesheets/elements/_panels.scss app/assets/stylesheets/elements/_panels.scss
index 4a47fb0..182752c 100644
--- app/assets/stylesheets/elements/_panels.scss
+++ app/assets/stylesheets/elements/_panels.scss
@@ -6,7 +6,10 @@
   border-left: 5px solid $panel-colour;
   @include span(11 of 12);
   @include prefix(0.25 of 12);
+  margin-top:$gutter-half/2;
   margin-bottom:$gutter;
+  padding-top:$gutter;
+  padding-bottom:$gutter;
 }
 
 .panel-indent legend {
diff --git app/assets/stylesheets/forms/_form-prefixes.scss app/assets/stylesheets/forms/_form-prefixes.scss
index 7647acc..e2edd92 100644
--- app/assets/stylesheets/forms/_form-prefixes.scss
+++ app/assets/stylesheets/forms/_form-prefixes.scss
@@ -1,21 +1,15 @@
 .prefixed-field {
-  .form-group{
-    // @include span(6 of 12);
-    &.radio-buttons{
-      // @include span(6 of 12 last);
-    }
-    &.integer{
-      position:relative;
-      &:before{
-        position:absolute;
-        content: '\00A3';
-        background:$panel-colour;
-        border-right:1px solid $border-colour;
-        top:50%;
-        left:0;
-        padding:10px;
-        z-index:100;
-      }
+  .form-group.integer{
+    position:relative;
+    &:before{
+      @include core-19;
+      float:left;
+      content: '\00A3';
+      background:$panel-colour;
+      border:1px solid $border-colour;
+      border-right:none;
+      padding:5px 10px 4px;
+      margin:2px 0;
     }
   }
 }
diff --git app/assets/stylesheets/jeet/_functions.scss app/assets/stylesheets/jeet/_functions.scss
deleted file mode 100644
index bc8cd0a..0000000
--- app/assets/stylesheets/jeet/_functions.scss
+++ /dev/null
@@ -1,67 +0,0 @@
-// List functions courtesy of the wonderful folks at Team Sass - check out their awesome grid: Singularity
-@function -get_span($ratio: 1) {
-  @return $ratio * 100;
-}
-@function -get_column($ratios: 1, $g: $jeet-gutter) {
-  @if ($jeet-parent-first != 'true') {
-    $ratios: -reverse($ratios);
-  }
-  $w: 100;
-  @each $ratio in $ratios {
-    $g: $g / $w * 100;
-    $w: 100 * $ratio - $g + $ratio * $g;
-  }
-  @return $w $g;
-}
-@function -get_layout_direction() {
-  $result: '';
-  @if $jeet-layout-direction == RTL {
-    $result: right;
-  } @else {
-    $result: left;
-  }
-  @return $result;
-}
-@function -replace-nth($list, $index, $value) {
-  @if type-of($index) != number or $index == 0 or abs($index) > length($list) {
-    @warn "Invalid index (#{$index}) for `replace-nth`.";
-    @return false;
-  }
-  $list: set-nth($list, $index, $value);
-  @return if(not is-true($value), purge($list), $list);
-}
-@function -reverse($list, $recursive: false) {
-  $result: ();
-  @for $i from length($list)*-1 through -1 {
-    @if type-of(nth($list, abs($i))) == list and $recursive {
-      $result: append($result, reverse(nth($list, abs($i)), $recursive));
-    } @else {
-      $result: append($result, nth($list, abs($i)));
-    }
-  }
-  @return $result;
-}
-@function opposite-direction($dir) {
-  @if $dir == 'left' {
-    @return right;
-  }
-  @else if  $dir == 'right' {
-    @return left;
-  }
-  @else if $dir == 'ltr' {
-    @return rtl;
-  }
-  @else if $dir == 'rtl' {
-    @return ltr;
-  }
-  @else if $dir == 'top' {
-    @return bottom;
-  }
-  @else if $dir == 'bottom' {
-    @return top;
-  }
-  @else {
-    @warn "#{$dir} is not a direction! Make sure your direction is all lowercase!";
-    @return false;
-  }
-}
diff --git app/assets/stylesheets/jeet/_grid.scss app/assets/stylesheets/jeet/_grid.scss
deleted file mode 100644
index 4418bfb..0000000
--- app/assets/stylesheets/jeet/_grid.scss
+++ /dev/null
@@ -1,212 +0,0 @@
-// Columns with Gutters
-@mixin column($ratios: 1, $offset: 0, $cycle: 0, $uncycle: 0, $gutter: $jeet-gutter) {
-  $side: -get_layout_direction();
-  $column_widths: -get_column($ratios, $gutter);
-  $margin_last: 0;
-  $margin_l: $margin_last;
-  $margin_r: nth($column_widths, 2);
-  @if $offset != 0 {
-    @if $offset < 0 {
-      $offset: $offset * -1;
-      $offset: nth(-get_column($offset, nth($column_widths, 2)), 1);
-      $margin_last: $offset + nth($column_widths, 2) * 2;
-      $margin_r: $margin_last;
-    } @else {
-      $offset: nth(-get_column($offset, nth($column_widths, 2)), 1);
-      $margin_l: $offset + nth($column_widths, 2);
-    }
-  }
-  @include cf();
-  float: $side;
-  clear: none;
-  text-align: inherit;
-  padding-left: 0;
-  padding-right: 0;
-  width: nth($column_widths, 1) * 1%;
-  margin-#{$side}: $margin_l * 1%;
-  margin-#{opposite-direction($side)}: $margin_r  * 1%;
-  @if $uncycle != 0 {
-    &:nth-child(#{$uncycle}n) {
-      margin-#{opposite-direction($side)}: $margin_r * 1%;
-      float: $side;
-    }
-
-    &:nth-child(#{$uncycle}n + 1) {
-      clear: none;
-    }
-  }
-  @if $cycle != 0 {
-    &:nth-child(#{$cycle}n) {
-      margin-#{opposite-direction($side)}: $margin_last * 1%;
-      float: opposite-direction($side);
-    }
-
-    &:nth-child(#{$cycle}n + 1) {
-      clear: both;
-    }
-  } @else {
-    &:last-child {
-      margin-#{opposite-direction($side)}: $margin_last * 1%;
-    }
-  }
-}
-@mixin col($args...) {
-  @include column($args...);
-}
-
-// Columns without Gutters
-@mixin span($ratio: 1, $offset: 0) {
-  $side: -get_layout_direction();
-  $span_width: -get_span($ratio);
-  $margin_r: 0;
-  $margin_l: $margin_r;
-  @if $offset != 0 {
-    @if $offset < 0 {
-      $offset: $offset * -1;
-      $margin_r: -get_span($offset);
-    } @else {
-      $margin_l: -get_span($offset);
-    }
-  }
-  @include cf();
-  float: $side;
-  clear: none;
-  padding-left: 0;
-  padding-right: 0;
-  text-align: inherit;
-  width: $span_width * 1%;
-  margin-#{$side}: $margin_l * 1%;
-  margin-#{opposite-direction($side)}: $margin_r * 1%;
-}
-
-// Source Ordering
-@mixin shift($ratios: 0, $col_or_span: column, $gutter: $jeet-gutter) {
-  $translate: '';
-  $side: -get_layout_direction();
-  @if $side == right {
-    $ratios: -replace_nth($ratios, 0, nth($ratios, 1) * -1);
-  }
-  @if $col_or_span == column or $col_or_span == col or $col_or_span == c {
-    $column_widths: -get_column($ratios, $gutter);
-    $translate: nth($column_widths, 1) + nth($column_widths, 2);
-  } @else {
-    $translate: -get_span($ratios);
-  }
-  position: relative;
-  left: $translate * 1%;
-}
-@mixin unshift() {
-  position: static;
-  left: 0;
-}
-
-// Edit Mode
-@mixin edit() {
-  * {
-    background: rgba(0, 0, 0, .05);
-    filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#10000000, endColorstr=#10000000);
-  }
-}
-
-// Horizontal Centering Block Elements
-@mixin center($max_width: 1410px, $pad: 0) {
-  @include cf();
-  width: auto;
-  max-width: $max_width;
-  float: none;
-  display: block;
-  margin-right: auto;
-  margin-left: auto;
-  padding-left: $pad;
-  padding-right: $pad;
-}
-
-// Stacking/Unstacking Elements
-@mixin stack($pad: 0, $align: false) {
-  $side: -get_layout_direction();
-  display: block;
-  clear: both;
-  float: none;
-  width: 100%;
-  margin-left: auto;
-  margin-right: auto;
-  &:first-child {
-    margin-#{$side}: auto;
-  }
-  &:last-child {
-    margin-#{opposite-direction($side)}: auto;
-  }
-  @if $pad != 0 {
-    padding-left: $pad;
-    padding-right: $pad;
-  }
-  @if ($align is not false) {
-    @if ($align == center) or ($align == c) {
-      text-align: center;
-    }
-    @if ($align == left) or ($align == l) {
-      text-align: left;
-    }
-    @if ($align == right) or ($align == r) {
-      text-align: right;
-    }
-  }
-}
-@mixin unstack() {
-  $side: -get_layout_direction();
-  display: inline;
-  clear: none;
-  width: auto;
-  margin-left: 0;
-  margin-right: 0;
-  &:first-child {
-    margin-#{$side}: 0;
-  }
-  &:last-child {
-    margin-#{opposite-direction($side)}: 0;
-  }
-  @if ($jeet-layout-direction == RTL) {
-    text-align: right;
-  } @else {
-    text-align: left;
-  }
-}
-
-// Horizontal/Vertical/Both Alignment - Parent container needs position relative. IE9+
-@mixin align($direction: both) {
-  position: absolute;
-  @include jeet-prefixer(transform-style, preserve-3d);
-  @if ($direction == horizontal) or ($direction == h) {
-    left: 50%;
-    @include jeet-prefixer(transform, translateX(-50%));
-  } @else if ($direction == vertical) or ($direction == v) {
-    top: 50%;
-    @include jeet-prefixer(transform, translateY(-50%));
-  } @else {
-    top: 50%;
-    left: 50%;
-    @include jeet-prefixer(transform, translate(-50%, -50%));
-  }
-}
-
-// Clearfix
-@mixin cf() {
-  *zoom: 1;
-  &:before, &:after {
-    content: '';
-    display: table;
-  }
-  &:after {
-    clear: both;
-  }
-}
-
-// Define a rule with all vendor-specific prefixes
-@mixin jeet-prefixer($name, $arguments) {
-  -webkit-#{$name}: #{$arguments};
-  -ms-#{$name}: #{$arguments};
-  -moz-#{$name}: #{$arguments};
-  -o-#{$name}: #{$arguments};
-  #{$name}: #{$arguments};
-}
-
diff --git app/assets/stylesheets/jeet/_settings.scss app/assets/stylesheets/jeet/_settings.scss
deleted file mode 100644
index 1957583..0000000
--- app/assets/stylesheets/jeet/_settings.scss
+++ /dev/null
@@ -1,6 +0,0 @@
-// Grid Settings
-$jeet-gutter: 3;
-$jeet-parent-first: false;
-$jeet-layout-direction: LTR;
-
-$g: $jeet-gutter;
diff --git app/assets/stylesheets/jeet/index.scss app/assets/stylesheets/jeet/index.scss
deleted file mode 100644
index b45cfa5..0000000
--- app/assets/stylesheets/jeet/index.scss
+++ /dev/null
@@ -1,17 +0,0 @@
-/*  Syntax Quick Reference
-  --------------------------
-  column($ratios: 1, $offset: 0, $cycle: 0, $uncycle: 0, $gutter: $jeet-gutter)
-  span($ratio: 1, $offset: 0)
-  shift($ratios: 0, $col_or_span: column, $gutter: $jeet-gutter)
-  unshift()
-  edit()
-  center($max_width: 1410px, $pad: 0)
-  stack($pad: 0, $align: false)
-  unstack()
-  align($direction: both)
-  cf()
-*/
-
-@import '_settings';
-@import '_functions';
-@import '_grid';
\ No newline at end of file
diff --git app/views/claims/_additional_information.html.slim app/views/claims/_additional_information.html.slim
new file mode 100644
index 0000000..38b4aeb
--- /dev/null
+++ app/views/claims/_additional_information.html.slim
@@ -0,0 +1,16 @@
+.main-column
+  fieldset
+    legend.visuallyhidden= t '.header'
+    = f.input :has_miscellaneous_information, as: :radio_buttons
+    = f.input :miscellaneous_information, label: false
+
+    = f.input :attachment do
+      - if resource.has_attachment?
+          = f.input :remove_attachment, as: :boolean,
+            inline_label: t('.remove_attachment',
+            file: claim.attachment_file.filename),
+            label: false
+
+      = f.input_field :attachment, as: :file
+
+    = f.hidden_field :attachment_cache
diff --git app/views/claims/_claim.html.slim app/views/claims/_claim.html.slim
deleted file mode 100644
index 7a3709f..0000000
--- app/views/claims/_claim.html.slim
+++ /dev/null
@@ -1,80 +0,0 @@
-.main-column
-  fieldset.form-panel
-    legend= t '.claim_type'
-
-    p.form-hint= t '.claim_type_hint'
-
-    fieldset
-      legend.medium Unfair dismissal
-      = f.input :is_unfair_dismissal,
-        as: :gds_check_boxes,
-        item_wrapper_class: 'block-label large-label',
-        wrapper_class: 'input form-group'
-
-    fieldset
-      legend.medium Discrimination
-      = f.input :discrimination_claims, label: false,
-        collection: Claim::DISCRIMINATION_COMPLAINTS,
-        as: :check_boxes,
-        item_wrapper_class: 'block-label',
-        wrapper_class: 'label-column'
-
-    fieldset
-      legend.medium Pay
-      = f.input :pay_claims, label: false,
-        collection: Claim::PAY_COMPLAINTS, as: :check_boxes,
-        item_wrapper_class: 'block-label',
-        wrapper_class: 'label-column'
-
-    fieldset
-      legend.medium Another type of claim
-      = f.input :is_other_type_of_claim,
-        as: :gds_check_boxes,
-        wrapper_class: 'reveal-checkbox',
-        input_html: {class: 'input-reveal'}
-
-      = f.input :other_claim_details, as: :text,
-        input_html: { rows: 5 },
-        wrapper_class: 'panel-indent toggle-content',
-        wrapper_html: { id: :other_claim_details_wrapper }
-
-    = f.input :claim_details,
-      as: :text,
-      input_html: { rows: 10 }
-
-    = f.input :desired_outcomes,
-      collection: Claim::DESIRED_OUTCOMES,
-      as: :check_boxes,
-      item_wrapper_class: 'block-label large-label'
-
-    = f.input :other_outcome,
-      as: :text,
-      input_html: { rows: 5 }
-
-
-    fieldset
-      legend.medium Whistleblowing Claim
-      = f.input :is_whistleblowing,
-        as: :radio_buttons,
-        item_wrapper_class: 'block-label',
-        wrapper_class: 'form-group-reveal',
-        reveal: { true => :send_claim_to_whistleblowing_entity_wrapper }
-
-      = f.input :send_claim_to_whistleblowing_entity,
-        as: :radio_buttons,
-        item_wrapper_class: 'block-label',
-        wrapper_class: 'panel-indent toggle-content',
-        wrapper_html: { id: :send_claim_to_whistleblowing_entity_wrapper }
-
-    = f.input :other_known_claimants,
-      as: :radio_buttons,
-      item_wrapper_class: 'block-label'
-
-    = f.input :other_known_claimant_names,
-      as: :text,
-      input_html: { rows: 5 },
-      wrapper_class: 'panel-indent toggle-content'
-
-    = f.input :miscellaneous_information,
-      as: :text,
-      input_html: { rows: 5 }
diff --git app/views/claims/_claim_details.html.slim app/views/claims/_claim_details.html.slim
new file mode 100644
index 0000000..710225a
--- /dev/null
+++ app/views/claims/_claim_details.html.slim
@@ -0,0 +1,26 @@
+.main-column
+  fieldset.form-panel
+    legend= t '.claim_details'
+
+    / TODO:
+    / Needs to include a link in the hint to the
+    / guide(writing your claim statement section)
+
+    = f.input :claim_details,
+      as: :text,
+      input_html: { rows: 30 }
+
+    fieldset
+      legend= t '.similar_claims'
+      = f.input :other_known_claimants,
+        as: :radio_buttons,
+        item_wrapper_class: 'block-label',
+        wrapper_class: 'form-group-reveal',
+        reveal: { true => :other_known_claimant_names_wrapper }
+
+      = f.input :other_known_claimant_names,
+        as: :text,
+        input_html: { rows: 5 },
+        item_wrapper_class: 'block-label',
+        wrapper_class: 'panel-indent toggle-content',
+        wrapper_html: { id: :other_known_claimant_names_wrapper }
diff --git app/views/claims/_claim_outcome.html.slim app/views/claims/_claim_outcome.html.slim
new file mode 100644
index 0000000..e769c6b
--- /dev/null
+++ app/views/claims/_claim_outcome.html.slim
@@ -0,0 +1,15 @@
+.main-column
+  fieldset.form-panel
+    legend= t '.claim_outcome'
+
+    fieldset
+      = f.input :desired_outcomes,
+        collection: Claim::DESIRED_OUTCOMES,
+        as: :check_boxes,
+        item_wrapper_class: 'block-label',
+        wrapper_class: 'label-column'
+
+    fieldset
+      = f.input :other_outcome,
+        as: :text,
+        input_html: { rows: 10 }
diff --git app/views/claims/_claim_type.html.slim app/views/claims/_claim_type.html.slim
new file mode 100644
index 0000000..dcceba1
--- /dev/null
+++ app/views/claims/_claim_type.html.slim
@@ -0,0 +1,57 @@
+.main-column
+  fieldset.form-panel
+    legend= t '.claim_type'
+
+    fieldset
+      p.form-prompt= t '.claim_type_label'
+      p.form-hint= t '.claim_type_hint'
+
+    fieldset
+      legend.medium= t '.unfair_dismissal'
+      = f.input :is_unfair_dismissal,
+        as: :gds_check_boxes,
+        item_wrapper_class: 'block-label large-label',
+        wrapper_class: 'input form-group'
+
+    fieldset
+      legend.medium= t '.discrimination'
+      = f.input :discrimination_claims, label: false,
+        collection: Claim::DISCRIMINATION_COMPLAINTS,
+        as: :check_boxes,
+        item_wrapper_class: 'block-label',
+        wrapper_class: 'label-column'
+
+    fieldset
+      legend.medium= t '.pay'
+      = f.input :pay_claims, label: false,
+        collection: Claim::PAY_COMPLAINTS, as: :check_boxes,
+        item_wrapper_class: 'block-label',
+        wrapper_class: 'label-column'
+
+    fieldset
+      legend.medium= t '.other_type'
+      = f.input :is_other_type_of_claim,
+        as: :gds_check_boxes,
+        wrapper_class: 'reveal-checkbox',
+        input_html: {class: 'input-reveal'}
+
+      = f.input :other_claim_details, as: :text,
+        input_html: { rows: 5 },
+        wrapper_class: 'panel-indent toggle-content',
+        wrapper_html: { id: :other_claim_details_wrapper }
+
+    / TODO: Include link to gov.uk/whistleblowing in hint
+
+    fieldset
+      legend= t '.whistleblowing'
+      = f.input :is_whistleblowing,
+        as: :radio_buttons,
+        item_wrapper_class: 'block-label',
+        wrapper_class: 'form-group-reveal',
+        reveal: { true => :send_claim_to_whistleblowing_entity_wrapper }
+
+      = f.input :send_claim_to_whistleblowing_entity,
+        as: :radio_buttons,
+        item_wrapper_class: 'block-label',
+        wrapper_class: 'panel-indent toggle-content',
+        wrapper_html: { id: :send_claim_to_whistleblowing_entity_wrapper }
diff --git app/views/claims/_claimant.html.slim app/views/claims/_claimant.html.slim
index 914b142..aa0e06d 100644
--- app/views/claims/_claimant.html.slim
+++ app/views/claims/_claimant.html.slim
@@ -3,7 +3,7 @@ fieldset.form-panel
 
   = render partial: 'personal_details', locals: { f: f }
 
-  = f.input :gender, collection: FormOptions::GENDERS, as: :radio_buttons,
+  = f.input :gender, collection: ClaimantForm::GENDERS, as: :radio_buttons,
     item_wrapper_class: 'block-label'
 
   = f.input :has_special_needs,
@@ -21,12 +21,12 @@ fieldset.form-panel
 
   = render partial: 'address', locals: { f: f }
 
-  = f.input :address_country, collection: FormOptions::COUNTRIES, include_blank: false
+  = f.input :address_country, collection: ClaimantForm::COUNTRIES, include_blank: false
   = f.input :address_telephone_number, as: :tel
   = f.input :mobile_number, as: :tel
   = f.input :email_address
 
   = f.input :contact_preference,
-    collection: FormOptions::CONTACT_PREFERENCES,
+    collection: ClaimantForm::CONTACT_PREFERENCES,
     as: :radio_buttons,
     item_wrapper_class: 'block-label'
diff --git app/views/claims/_employment.html.slim app/views/claims/_employment.html.slim
index 4995e04..55d3624 100644
--- app/views/claims/_employment.html.slim
+++ app/views/claims/_employment.html.slim
@@ -8,17 +8,17 @@
       item_wrapper_class: 'block-label',
       reveal: { true => :reveal_current_situation }
 
-    fieldset#reveal_current_situation.toggle-content
+    fieldset#reveal_current_situation
       legend= t '.current_situation_legend'
 
       = f.input :current_situation,
-        collection: FormOptions::CURRENT_SITUATION,
+        collection: EmploymentForm::CURRENT_SITUATION,
         as: :radio_buttons,
         item_wrapper_class: 'block-label',
         wrapper_class: 'form-group-reveal',
         reveal: { 'notice_period' => :end_date_wrapper, 'employment_terminated' => :employment_terminated_wrapper}
 
-    fieldset.toggle-content
+    fieldset
       legend= t '.employment_details_legend'
 
       = f.input :job_title
@@ -33,32 +33,33 @@
         wrapper_class: 'reveal-option-c',
         reveal: { true => :reveal_notice_pay_period }
 
-      = f.input :notice_pay_period_count, wrapper_html: { id: 'reveal_notice_pay_period', class: 'panel-indent toggle-content' } do
-        = f.input :notice_pay_period_count, label: false
-        = f.input :notice_pay_period_type, label: false,
-          collection: FormOptions::NOTICE_PAY_PERIODS, as: :radio_buttons,
-          item_wrapper_class: 'block-label'
+      = f.input :notice_pay_period_count, wrapper_html: { id: 'reveal_notice_pay_period', class: 'panel-indent' } do
+        .inline-fields
+          = f.input :notice_pay_period_count, label: false
+          = f.input :notice_pay_period_type, label: false,
+            collection: EmploymentForm::NOTICE_PAY_PERIODS, as: :radio_buttons,
+            item_wrapper_class: 'slim-label'
 
       = f.input :average_hours_worked_per_week, input_html: {class: 'short-input'}
 
-    fieldset.toggle-content
+    fieldset
       legend= t '.pay_legend'
 
-      = f.input :gross_pay, input_html: {class: 'prefix-pound'} do
-        .prefixed-field
+      = f.input :gross_pay, input_html: { class: 'prefix-pound' } do
+        .prefixed-field.inline-fields
           = f.input :gross_pay, label: false, hint:false
           = f.input :gross_pay_period_type,
             label: false,
-            collection: FormOptions::PAY_PERIODS,
+            collection: EmploymentForm::PAY_PERIODS,
             as: :radio_buttons,
-            item_wrapper_class: 'block-label'
+            item_wrapper_class: 'slim-label'
 
-      = f.input :net_pay, input_html: {class: 'prefix-pound'} do
-        .prefixed-field
+      = f.input :net_pay, input_html: { class: 'prefix-pound' } do
+        .prefixed-field.inline-fields
           = f.input :net_pay, label: false, hint:false
           = f.input :net_pay_period_type, label: false,
-            collection: FormOptions::PAY_PERIODS, as: :radio_buttons,
-            item_wrapper_class: 'block-label'
+            collection: EmploymentForm::PAY_PERIODS, as: :radio_buttons,
+            item_wrapper_class: 'slim-label'
 
       = f.input :enrolled_in_pension_scheme, as: :radio_buttons,
         item_wrapper_class: 'block-label'
@@ -67,7 +68,7 @@
         as: :text,
         input_html: { rows: 5 }
 
-    fieldset.toggle-content.reveal-option-c
+    fieldset.reveal-option-c
       legend= t '.new_job_legend'
 
       = f.input :found_new_job,
@@ -76,11 +77,11 @@
         wrapper_class: 'form-group-reveal',
         reveal: { true => :reveal_new_job }
 
-      #reveal_new_job.panel-indent.toggle-content
+      #reveal_new_job.panel-indent
         = f.input :new_job_start_date
-        = f.input :new_job_gross_pay,
-          wrapper_class: 'prefixed-field',
-          input_html: {class: 'prefix-pound'}
-        = f.input :new_job_gross_pay_frequency, label: false, label: false,
-          collection: FormOptions::PAY_PERIODS, as: :radio_buttons,
-          item_wrapper_class: 'block-label'
+        = f.input :new_job_gross_pay, input_html: { class: 'prefix-pound' } do
+        .prefixed-field.inline-fields
+          = f.input :new_job_gross_pay, label: false, hint:false
+          = f.input :new_job_gross_pay_frequency, label: false, label: false,
+          collection: EmploymentForm::PAY_PERIODS, as: :radio_buttons,
+          item_wrapper_class: 'slim-label'
diff --git app/views/claims/_password.html.slim app/views/claims/_password.html.slim
index 5fcb72a..977c404 100644
--- app/views/claims/_password.html.slim
+++ app/views/claims/_password.html.slim
@@ -2,15 +2,11 @@
   fieldset.form-panel
     legend= t '.legend'
 
-    p
-      = t '.access_details.header'
-      span.form-hint
-        = t '.access_details.hint'
+    h3.font-small = t '.access_details.header'
+    p.form-hint= t '.access_details.hint'
 
-    div.reference= claim.reference
+    .reference.panel-indent= claim.reference
 
     div= f.input :password, as: :string
 
-    p = t '.record_details.header'
-
     div= f.input :save_and_return_email
diff --git app/views/claims/_personal_details.html.slim app/views/claims/_personal_details.html.slim
index efd79a9..f16c0b4 100644
--- app/views/claims/_personal_details.html.slim
+++ app/views/claims/_personal_details.html.slim
@@ -1,4 +1,4 @@
-= f.input :title, collection: FormOptions::TITLES, include_blank: :translate
+= f.input :title, collection: ClaimantForm::TITLES, include_blank: :translate
 = f.input :first_name
 = f.input :last_name
 = f.input :date_of_birth
diff --git app/views/claims/_representative.html.slim app/views/claims/_representative.html.slim
index 3d06cfb..696ae7b 100644
--- app/views/claims/_representative.html.slim
+++ app/views/claims/_representative.html.slim
@@ -17,7 +17,7 @@
     fieldset.form-panel
       legend= t '.representative_legend'
 
-      = f.input :type, collection: FormOptions::REPRESENTATIVE_TYPES, include_blank: :translate
+      = f.input :type, collection: RepresentativeForm::TYPES, include_blank: :translate
       = f.input :organisation_name
       = f.input :name
 
diff --git app/views/claims/_respondent.slim app/views/claims/_respondent.slim
index 582dc8a..e3aef8e 100644
--- app/views/claims/_respondent.slim
+++ app/views/claims/_respondent.slim
@@ -14,7 +14,7 @@
 
     .panel-indent.toggle-content
       = f.input :no_acas_number_reason,
-        collection: FormOptions::NO_ACAS_REASON,
+        collection: RespondentForm::NO_ACAS_REASON,
         as: :radio_buttons,
         required: true,
         item_wrapper_class: 'block-label large-label'
diff --git app/views/claims/new.html.slim app/views/claims/new.html.slim
index d4aad2a..8162a69 100644
--- app/views/claims/new.html.slim
+++ app/views/claims/new.html.slim
@@ -1,9 +1,10 @@
-header
+header.main-header
   h1= t('.header')
   p= t('.info')
 
-section
-  .main-column
+.main-section
+  .main-content
+
     = simple_form_for claim, url: claim_path do |f|
       = f.button :submit
     = link_to t('helpers.link.claim.return'), new_user_sessions_path
diff --git app/views/claims/show.html.slim app/views/claims/show.html.slim
index 91b4293..77510ef 100644
--- app/views/claims/show.html.slim
+++ app/views/claims/show.html.slim
@@ -12,7 +12,7 @@ header.main-header
         li
           = link_to('Sign out', user_sessions_path)
   .main-content
-    = simple_form_for resource, url: claim_path do |f|
+    = simple_form_for resource, url: claim_path, multipart: true do |f|
       = hidden_field_tag :page, current_step
       = f.error_notification
       .form-inputs
diff --git app/views/user_sessions/new.html.slim app/views/user_sessions/new.html.slim
index 2462b21..d64ad11 100644
--- app/views/user_sessions/new.html.slim
+++ app/views/user_sessions/new.html.slim
@@ -1,9 +1,8 @@
-= content_for(:header, t('.header'))
-= content_for(:info, t('.info'))
-
-section
-  .main-column
+header.main-header
+  h1= t('.header')
 
+.main-section
+  .main-content
     = simple_form_for user_session do |f|
       = f.error_notification
       p= f.input :reference
