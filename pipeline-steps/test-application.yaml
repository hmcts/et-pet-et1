
steps:
- script: |
      docker-compose -p $(Build.BuildId) -f docker-compose-test.yml -f docker-compose-test-ci.yml run test bundle install
  displayName: 'bundle install'


- script: |
      docker-compose -p $(Build.BuildId) -f docker-compose-test.yml -f docker-compose-test-ci.yml run test npm install
  displayName: 'test npm'

- script: |
      docker-compose -p $(Build.BuildId) -f docker-compose-test.yml -f docker-compose-test-ci.yml run test bash -c "bundle exec rake db:create db:migrate parallel:create parallel:migrate assets:precompile"
  displayName: 'assets precompile'


- script: |
      docker-compose -p $(Build.BuildId) -f docker-compose-test.yml -f docker-compose-test-ci.yml run test bash -c "DRIVER=poltergeist bundle exec parallel_rspec spec"
  displayName: 'rspec'

- script: |
      docker-compose -p $(Build.BuildId) -f docker-compose-test.yml -f docker-compose-test-ci.yml run test bash -c "bundle exec parallel_cucumber features"
  displayName: 'cucumber'

- script: |
      docker-compose -p $(Build.BuildId) -f docker-compose-test.yml -f docker-compose-test-ci.yml down -v
  condition: always()
  displayName: 'cleanup'